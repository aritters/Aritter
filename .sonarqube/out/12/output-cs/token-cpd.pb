˙
kC:\Projects\anderson.souza\Ritter\samples\Ritter.Samples.Infra.Data\Configurations\EmployeeConfiguration.cs
	namespace 	
Ritter
 
. 
Samples 
. 
Infra 
. 
Data #
{ 
internal 
class !
EmployeeConfiguration (
:) *$
IEntityTypeConfiguration+ C
<C D
EmployeeD L
>L M
{ 
public		 
void		 
	Configure		 
(		 
EntityTypeBuilder		 /
<		/ 0
Employee		0 8
>		8 9
builder		: A
)		A B
{

 	
builder 
. 
ToTable 
( 
$str '
)' (
;( )
builder 
. 
HasKey 
( 
p 
=> 
p  !
.! "
Id" $
)$ %
;% &
builder 
. 
Property 
( 
p 
=> !
p" #
.# $
Id$ &
)& '
. 
ValueGeneratedOnAdd $
($ %
)% &
. 
HasColumnName 
( 
$str ,
), -
. 

IsRequired 
( 
) 
; 
builder 
. 
OwnsOne 
( 
p 
=>  
p! "
." #
Name# '
,' (
name) -
=>. 0
{ 
name 
. 
Property 
( 
p 
=>  "
p# $
.$ %
	FirstName% .
). /
. 
HasColumnName "
(" #
$str# /
)/ 0
. 
HasMaxLength !
(! "
$num" $
)$ %
. 

IsRequired 
(  
)  !
;! "
name 
. 
Property 
( 
p 
=>  "
p# $
.$ %
LastName% -
)- .
. 
HasColumnName "
(" #
$str# .
). /
. 
HasMaxLength !
(! "
$num" $
)$ %
. 

IsRequired 
(  
)  !
;! "
} 
) 
; 
builder   
.   
Property   
(   
p   
=>   !
p  " #
.  # $
Cpf  $ '
)  ' (
.!! 
HasColumnName!! 
(!! 
$str!! $
)!!$ %
."" 
HasMaxLength"" 
("" 
$num""  
)""  !
.## 

IsRequired## 
(## 
)## 
;## 
builder%% 
.%% 
Property%% 
(%% 
p%% 
=>%% !
p%%" #
.%%# $
Uid%%$ '
)%%' (
.&& 
HasColumnName&& 
(&& 
$str&& $
)&&$ %
.'' 

IsRequired'' 
('' 
)'' 
;'' 
}(( 	
})) 
}** §	
aC:\Projects\anderson.souza\Ritter\samples\Ritter.Samples.Infra.Data\DesignTimeDbContextFactory.cs
	namespace 	
Ritter
 
. 
Samples 
. 
Infra 
. 
Data #
{ 
public 

class &
DesignTimeDbContextFactory +
:, -'
IDesignTimeDbContextFactory. I
<I J

UnitOfWorkJ T
>T U
{ 
public 

UnitOfWork 
CreateDbContext )
() *
string* 0
[0 1
]1 2
args3 7
)7 8
{		 	
var

 
builder

 
=

 
new

 #
DbContextOptionsBuilder

 5
<

5 6

UnitOfWork

6 @
>

@ A
(

A B
)

B C
;

C D
builder 
. 
UseSqlServer  
(  !
$str	! Ä
)
Ä Å
;
Å Ç
return 
new 

UnitOfWork !
(! "
builder" )
.) *
Options* 1
)1 2
;2 3
} 	
} 
} ˆ
YC:\Projects\anderson.souza\Ritter\samples\Ritter.Samples.Infra.Data\EmployeeRepository.cs
	namespace 	
Ritter
 
. 
Samples 
. 
Infra 
. 
Data #
{ 
public 

class 
EmployeeRepository #
:$ %

Repository& 0
<0 1
Employee1 9
>9 :
,: ;
IEmployeeRepository< O
{ 
public 
EmployeeRepository !
(! " 
IQueryableUnitOfWork" 6

unitOfWork7 A
)A B
:		 
base		 
(		 

unitOfWork		 
)		 
{

 	
} 	
} 
} Õ
qC:\Projects\anderson.souza\Ritter\samples\Ritter.Samples.Infra.Data\Migrations\20180503193207_InitialMigration.cs
	namespace 	
Ritter
 
. 
Samples 
. 
Infra 
. 
Data #
.# $

Migrations$ .
{ 
public 

partial 
class 
InitialMigration )
:* +
	Migration, 5
{		 
	protected

 
override

 
void

 
Up

  "
(

" #
MigrationBuilder

# 3
migrationBuilder

4 D
)

D E
{ 	
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str !
,! "
columns 
: 
table 
=> !
new" %
{ 
employee_id 
=  !
table" '
.' (
Column( .
<. /
int/ 2
>2 3
(3 4
nullable4 <
:< =
false> C
)C D
. 

Annotation #
(# $
$str$ G
,G H,
 SqlServerValueGenerationStrategyI i
.i j
IdentityColumnj x
)x y
,y z
cpf 
= 
table 
.  
Column  &
<& '
string' -
>- .
(. /
	maxLength/ 8
:8 9
$num: <
,< =
nullable> F
:F G
falseH M
)M N
,N O
uid 
= 
table 
.  
Column  &
<& '
Guid' +
>+ ,
(, -
nullable- 5
:5 6
false7 <
)< =
,= >

first_name 
=  
table! &
.& '
Column' -
<- .
string. 4
>4 5
(5 6
	maxLength6 ?
:? @
$numA C
,C D
nullableE M
:M N
falseO T
)T U
,U V
	last_name 
= 
table  %
.% &
Column& ,
<, -
string- 3
>3 4
(4 5
	maxLength5 >
:> ?
$num@ B
,B C
nullableD L
:L M
falseN S
)S T
} 
, 
constraints 
: 
table "
=># %
{ 
table 
. 

PrimaryKey $
($ %
$str% 3
,3 4
x5 6
=>7 9
x: ;
.; <
employee_id< G
)G H
;H I
} 
) 
; 
} 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{ 	
migrationBuilder 
. 
	DropTable &
(& '
name   
:   
$str   !
)  ! "
;  " #
}!! 	
}"" 
}## Ã
QC:\Projects\anderson.souza\Ritter\samples\Ritter.Samples.Infra.Data\UnitOfWork.cs
	namespace 	
Ritter
 
. 
Samples 
. 
Infra 
. 
Data #
{ 
public 

class 

UnitOfWork 
: 
	DbContext '
,' ( 
IQueryableUnitOfWork) =
,= >
ISql? C
{		 
public

 
DbSet

 
<

 
Employee

 
>

 
	Employees

 (
{

) *
get

+ .
;

. /
set

0 3
;

3 4
}

5 6
public 

UnitOfWork 
( 
DbContextOptions *
<* +

UnitOfWork+ 5
>5 6
options7 >
)> ?
:@ A
baseB F
(F G
optionsG N
)N O
{P Q
}R S
public 
void 
BeginTransaction $
($ %
)% &
{ 	
Database 
. 
BeginTransaction %
(% &
)& '
;' (
} 	
public 
void 
Commit 
( 
) 
{ 	
Database 
. 
CommitTransaction &
(& '
)' (
;( )
} 	
public 
void 
Rollback 
( 
) 
{ 	
Database 
. 
RollbackTransaction (
(( )
)) *
;* +
} 	
	protected 
override 
void 
OnModelCreating  /
(/ 0
ModelBuilder0 <
modelBuilder= I
)I J
{ 	
modelBuilder 
. 
ApplyConfiguration +
(+ ,
new, /!
EmployeeConfiguration0 E
(E F
)F G
)G H
;H I
}   	
public"" 
async"" 
Task"" 
<"" 
int"" 
>"" 
SaveChangesAsync"" /
(""/ 0
)""0 1
{## 	
return$$ 
await$$ 
base$$ 
.$$ 
SaveChangesAsync$$ .
($$. /
)$$/ 0
;$$0 1
}%% 	
public'' 
int'' 
ExecuteCommand'' !
(''! "
string''" (

sqlCommand'') 3
,''3 4
params''5 ;
object''< B
[''B C
]''C D

parameters''E O
)''O P
{(( 	
return)) 
Database)) 
.)) 
ExecuteSqlCommand)) -
())- .

sqlCommand)). 8
,))8 9

parameters)): D
)))D E
;))E F
}** 	
}++ 
},, 